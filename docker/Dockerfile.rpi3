FROM armv7/armhf-ubuntu:16.04

COPY docker/qemu-arm-static /usr/bin/qemu-arm-static

RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV VENV /root/venv

RUN apt-get -y update && apt-get -y install git wget nano python-dev python3-dev python-pip


# OpenCV dependencies (libsm, libglib, ...)
RUN apt-get -y install cmake build-essential arduino-mk zlib1g-dev \
              libsm6 libxext6 libfontconfig1 libxrender1 libglib2.0-0

RUN apt-get -y install libpng12-dev pkg-config apt-utils libfreetype6-dev


# OpenCV deps
RUN apt-get install -y libtiff5-dev libjasper-dev libpng12-dev \
                       libjpeg-dev libavcodec-dev libavformat-dev \
                       libswscale-dev libv4l-dev libgtk2.0-dev \
                       libatlas-base-dev gfortran

# RUN apt-get clean && \
#     rm -rf /var/lib/apt/lists/*

COPY docker/requirements.txt /tmp/

RUN pip install virtualenv && \
    virtualenv $VENV --python=python3 && \
    . $VENV/bin/activate && \
    pip install --upgrade pip && \
    pip install enum34==1.1.6 && \
    pip install numpy==1.14.4 && \
    pip install pygame==1.9.3 && \
    pip install pytest==3.4.2 && \
    pip install pytest-cov==2.5.1 && \
    pip install pyserial==3.4 && \
    pip install pyzmq==16.0.2 && \
    pip install robust-serial==0.1 && \
    pip install scikit-learn==0.19.0 && \
    pip install scipy==0.19.1 && \
    pip install six==1.11.0 && \
    pip install tqdm==4.19.5
    # matplotlib==2.2.2

RUN  wget "https://github.com/jabelone/OpenCV-for-Pi/raw/master/latest-OpenCV.deb"
RUN  dpkg -i latest-OpenCV.deb

ENV PATH=$VENV/bin:$PATH

COPY docker/entrypoint.sh /
RUN chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
CMD ["/bin/bash"]
